name: Tests

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - ".github/**"
      - "**.md"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        name: [backend, frontend-merge, frontend-pr]
        include:
          - name: backend
            dir: backend
            triggers: ('backend/')
            expected_triggered: false
          - name: frontend-merge
            dir: frontend
            triggers: ('.')
            expected_triggered: true
          - name: frontend-pr
            dir: frontend
            expected_triggered: true
    steps:
      - uses: actions/checkout@v5
      - id: action
        uses: ./
        with:
          commands: |
            npm ci
            npm run test:cov
          dir: ${{ matrix.dir }}
          node_version: "20"
          repository: bcgov/quickstart-openshift
          sonar_args: >
            -Dsonar.exclusions=**/coverage/**,**/node_modules/**,**/*spec.ts
            -Dsonar.javascript.lcov.reportPaths=./coverage/lcov.info
            -Dsonar.organization=bcgov-nr
            -Dsonar.projectKey=bcgov-nr_action-test-and-analyse_${{ matrix.dir }}
            -Dsonar.sources=src
            -Dsonar.tests.inclusions=**/*spec.ts
          sonar_token: ${{ matrix.name == 'backend' && secrets.SONAR_TOKEN_BACKEND || secrets.SONAR_TOKEN_FRONTEND }}
          triggers: ${{ matrix.triggers }}

      - name: Verify trigger behavior
        run: |
          echo "üîç Verifying trigger behavior for ${{ matrix.name }}"
          echo "Expected: ${{ matrix.expected_triggered }}"
          echo "Actual: ${{ steps.action.outputs.triggered }}"

          case "${{ matrix.name }}" in
            "backend")
              if [ "${{ steps.action.outputs.triggered }}" != "false" ]; then
                echo "‚ùå Backend job should NOT have been triggered (no backend/ changes)"
                exit 1
              else
                echo "‚úÖ Backend job correctly NOT triggered"
              fi
              ;;
            "frontend-merge")
              if [ "${{ steps.action.outputs.triggered }}" != "true" ]; then
                echo "‚ùå Frontend-merge job should have been triggered (triggers: '.')"
                exit 1
              else
                echo "‚úÖ Frontend-merge job correctly triggered"
              fi
              ;;
            "frontend-pr")
              if [ "${{ steps.action.outputs.triggered }}" != "true" ]; then
                echo "‚ùå Frontend-pr job should have been triggered (no triggers = always run)"
                exit 1
              else
                echo "‚úÖ Frontend-pr job correctly triggered"
              fi
              ;;
          esac

          echo "üéâ ${{ matrix.name }} trigger behavior verified correctly!"

  error-handling-tests:
    name: Error Handling Tests
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        test: [command-failure, missing-directory, missing-package-json]
    steps:
      - uses: actions/checkout@v5
      
      - name: Test command failure handling
        if: matrix.test == 'command-failure'
        uses: ./
        continue-on-error: true
        with:
          commands: "npm run nonexistent-script"
          dir: .
          node_version: "20"
        id: test-command-failure

      - name: Test missing directory
        if: matrix.test == 'missing-directory'
        uses: ./
        continue-on-error: true
        with:
          commands: "echo 'test'"
          dir: "nonexistent-directory"
          node_version: "20"
        id: test-missing-directory

      - name: Test missing package.json
        if: matrix.test == 'missing-package-json'
        uses: ./
        continue-on-error: true
        with:
          commands: "echo 'test'"
          dir: ".github"
          node_version: "20"
        id: test-missing-package-json

      - name: Verify error handling
        run: |
          case "${{ matrix.test }}" in
            "command-failure")
              if [ "${{ steps.test-command-failure.outcome }}" == "success" ]; then
                echo "‚ùå Should have failed for command failure"
                exit 1
              else
                echo "‚úÖ Correctly failed for command failure with helpful error message"
              fi
              ;;
            "missing-directory")
              if [ "${{ steps.test-missing-directory.outcome }}" == "success" ]; then
                echo "‚ùå Should have failed for missing directory"
                exit 1
              else
                echo "‚úÖ Correctly failed for missing directory"
              fi
              ;;
            "missing-package-json")
              if [ "${{ steps.test-missing-package-json.outcome }}" == "success" ]; then
                echo "‚ùå Should have failed for missing package.json"
                exit 1
              else
                echo "‚úÖ Correctly failed for missing package.json"
              fi
              ;;
          esac
          
          echo "üéâ Error handling test '${{ matrix.test }}' passed!"
